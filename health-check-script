#!/bin/bash 
##---------- Purpose : To quickly check and report health status in a linux system.----------##
#------variables used------#
S="************************************"
D="-------------------------------------"
COLOR="y"

MOUNT=$(mount|egrep -iw "ext4|ext3|xfs|gfs|gfs2|btrfs"|grep -v "loop"|sort -u -t' ' -k1,2)
#FS_USAGE=$(df -PThl -x tmpfs -x iso9660 -x devtmpfs -x squashfs|awk '!seen[$1]++'|sort -k6n|tail -n +2)
FS_USAGE=$(df -PThl  |tail -n +2 |sort -u -k6n)
#df -PThl |tail -n +2 |sort -u -k6n 
IUSAGE=$(df -iPThl -x tmpfs -x iso9660 -x devtmpfs -x squashfs|awk '!seen[$1]++'|sort -k6n|tail -n +2)

if [ $COLOR == y ]; then
{
 GCOLOR="\e[47;32m ------ OK/HEALTHY \e[0m"
 WCOLOR="\e[43;31m ------ WARNING \e[0m"
 CCOLOR="\e[47;31m ------ CRITICAL \e[0m"
}
else
{
 GCOLOR=" ------ OK/HEALTHY "
 WCOLOR=" ------ WARNING "
 CCOLOR=" ------ CRITICAL "
}
fi

echo -e "$S"
echo -e "\tSystem Health Status"
echo -e "$S"
#--------Print Operating System Details--------#
#hostname -f &> /dev/null && printf "Hostname : $(hostname -f)" || printf "Hostname : $(hostname -s)"

printf "Hostname : $(hostname -f)" || printf "Hostname : $(hostname -s)"

echo -en "\nOperating System : "
#[ -f /etc/os-release ] && echo $(egrep -w "NAME|VERSION" /etc/os-release|awk -F= '{ print $2 }'|sed 's/"//g') || cat /etc/system-release
echo $(cat /etc/redhat-release) || echo $(egrep -w "NAME|VERSION" /etc/os-release|awk -F= '{ print $2 }'|sed 's/"//g')
echo -e "Kernel Version :" $(uname -r)
printf "OS Architecture :"$(arch | grep x86_64 &> /dev/null) && printf " 64 Bit OS\n"  || printf " 32 Bit OS\n"
echo -e "\nTotal Number Of Processor[S]: $(echo $(nproc)  || echo $(cat /proc/â”‚Swap:          2047           0        2047
cpuinfo | grep -i processor | wc -l))"
echo -e "Total Memory: $(free -h | grep -i mem | awk '{print $2}')"

#--------Print system uptime-------#
function uptime_func () {
UPTIME=$(uptime)
	echo -en "System Uptime : "
	echo $UPTIME|grep day &> /dev/null
	if [ $? != 0 ]; then
  		echo $UPTIME|grep -w min &> /dev/null && echo -en "$(echo $UPTIME|awk '{print $2" by "$3}'|sed -e 's/,.*//g') minutes" \
	 || echo -en "$(echo $UPTIME|awk '{print $2" by "$3" "$4}'|sed -e 's/,.*//g') hours"
	else
 	 echo -en $(echo $UPTIME|awk '{print $2" by "$3" "$4" "$5" hours"}'|sed -e 's/,//g')
	fi
	echo -e "\nCurrent System Date & Time : "$(date +%c)
} 

#read -p 'Enter the Function name like uptime_func/cpu_func/mem_func/filesystem_func: ' uptime_func && echo  $(uptime_func)
 


#--------Check disk usage on all mounted file systems--------#

function filesystem_usage () { 

	echo -e "\n\nChecking For Disk Usage On Mounted File System[s]"
	echo -e "$D$D"
	echo -e "( 0-85% = OK/HEALTHY,  85-95% = WARNING,  95-100% = CRITICAL )"
	echo -e "$D$D"
	echo -e "Mounted File System[s] Utilization (Percentage Used):\n"

	COL1=$(echo "$FS_USAGE"|awk '{print $1 " "$7}')
	COL2=$(echo "$FS_USAGE"|awk '{print $6}'|sed -e 's/%//g')

	for i in $(echo "$COL2"); do
	{
 	 if [ $i -ge 95 ]; then
   	 COL3="$(echo -e $i"% $CCOLOR\n$COL3")"
 	 elif [[ $i -ge 85 && $i -lt 95 ]]; then
   	 COL3="$(echo -e $i"% $WCOLOR\n$COL3")"
 	 else
   	 COL3="$(echo -e $i"% $GCOLOR\n$COL3")"
 	 fi
	}
	done
	COL3=$(echo "$COL3"|sort -k1n)
   	 
	paste  <(echo "$COL1") <(echo "$COL3") -d' '|column -t
} 
filesystem_usage

#----------Percentage of Menmory used-----------------# 
function Percentage_mem_used_func () {
	echo -e "\n\nChecking For Memory Utilization" 
	echo -e "$D"
     	#free -t | awk 'NR == 2 {printf("Current Memory Utilization is : %.2f%"), $3/$2*100}'
	echo -e "Current Memory Utilization is: $(free -t |awk 'NR ==2{printf("%.2f%"), $3/$2*100}'\n)"
} 

Percentage_mem_used_func
#--------Check for Processor Utilization (current data)--------#
function CPU_Utilization_func () { 
	echo -e "\n\nChecking For Processor Utilization"
	echo -e "$D"
	echo -e "\nCurrent Processor Utilization Summary :\n"
	mpstat -P ALL
	#echo -e "\nTotal Number Of Processor[S]: $(echo $(nproc)  || echo $(cat /proc/cpuinfo | grep -i processor | wc -l))"
	Load_Average_func
}
#CPU_Utilization_func
#--------Check for load average (current data)--------#
function Load_Average_func () {
	echo -e "\n\nChecking For Load Average"
	echo -e "$D"
	echo -e "Current Load Average : $(uptime|grep -o "load average.*"|awk '{print $3" " $4" " $5}')"
}

CPU_Utilization_func

#--------Print top 5 Memory & CPU consumed process threads---------#
#--------excludes current running program ----------#
function Top_5_mem_cpu_func () { 
	echo -e "\n\nTop 5 Memory Resource Hogging Processes"
	echo -e "$D$D"
	ps -eo pmem,pid,ppid,user,stat,args --sort=-pmem|grep -v $$|head -6|sed 's/$/\n/'

	echo -e "\nTop 5 CPU Resource Hogging Processes"
	echo -e "$D$D"
	ps -eo pcpu,pid,ppid,user,stat,args --sort=-pcpu|grep -v $$|head -6|sed 's/$/\n/'

	echo -e "\nTop 5 Process by Memory and CPU Usage" 
	echo -e "$D$D"
	ps -eo pmem,pcpu,pid,ppid,user,stat,args --sort=-pmem | grep -v $$|head -6|sed 's/$/\n/'
}
Top_5_mem_cpu_func
